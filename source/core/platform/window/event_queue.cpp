#include "pch.h"

#include "event_queue.h"


const char* wndWndKeyToStr(WndKey key) noexcept
{
    switch (key) {
        case WndKey::KEY_SPACE: return "KEY_SPACE";
        case WndKey::KEY_APOSTROPHE: return "KEY_APOSTROPHE";
        case WndKey::KEY_COMMA: return "KEY_COMMA";
        case WndKey::KEY_MINUS: return "KEY_MINUS";
        case WndKey::KEY_DOT: return "KEY_DOT";
        case WndKey::KEY_SLASH: return "KEY_SLASH";
        case WndKey::KEY_0: return "KEY_0";
        case WndKey::KEY_1: return "KEY_1";
        case WndKey::KEY_2: return "KEY_2";
        case WndKey::KEY_3: return "KEY_3";
        case WndKey::KEY_4: return "KEY_4";
        case WndKey::KEY_5: return "KEY_5";
        case WndKey::KEY_6: return "KEY_6";
        case WndKey::KEY_7: return "KEY_7";
        case WndKey::KEY_8: return "KEY_8";
        case WndKey::KEY_9: return "KEY_9";
        case WndKey::KEY_SEMICOLON: return "KEY_SEMICOLON";
        case WndKey::KEY_EQUAL: return "KEY_EQUAL";
        case WndKey::KEY_A: return "KEY_A";
        case WndKey::KEY_B: return "KEY_B";
        case WndKey::KEY_C: return "KEY_C";
        case WndKey::KEY_D: return "KEY_D";
        case WndKey::KEY_E: return "KEY_E";
        case WndKey::KEY_F: return "KEY_F";
        case WndKey::KEY_G: return "KEY_G";
        case WndKey::KEY_H: return "KEY_H";
        case WndKey::KEY_I: return "KEY_I";
        case WndKey::KEY_J: return "KEY_J";
        case WndKey::KEY_K: return "KEY_K";
        case WndKey::KEY_L: return "KEY_L";
        case WndKey::KEY_M: return "KEY_M";
        case WndKey::KEY_N: return "KEY_N";
        case WndKey::KEY_O: return "KEY_O";
        case WndKey::KEY_P: return "KEY_P";
        case WndKey::KEY_Q: return "KEY_Q";
        case WndKey::KEY_R: return "KEY_R";
        case WndKey::KEY_S: return "KEY_S";
        case WndKey::KEY_T: return "KEY_T";
        case WndKey::KEY_U: return "KEY_U";
        case WndKey::KEY_V: return "KEY_V";
        case WndKey::KEY_W: return "KEY_W";
        case WndKey::KEY_X: return "KEY_X";
        case WndKey::KEY_Y: return "KEY_Y";
        case WndKey::KEY_Z: return "KEY_Z";
        case WndKey::KEY_LEFT_BRACKET: return "KEY_LEFT_BRACKET";
        case WndKey::KEY_BACKSLASH: return "KEY_BACKSLASH";
        case WndKey::KEY_RIGHT_BRACKET: return "KEY_RIGHT_BRACKET";
        case WndKey::KEY_GRAVE_ACCENT: return "KEY_GRAVE_ACCENT";
        case WndKey::KEY_ESCAPE: return "KEY_ESCAPE";
        case WndKey::KEY_ENTER: return "KEY_ENTER";
        case WndKey::KEY_TAB: return "KEY_TAB";
        case WndKey::KEY_BACKSPACE: return "KEY_BACKSPACE";
        case WndKey::KEY_INSERT: return "KEY_INSERT";
        case WndKey::KEY_DELETE: return "KEY_DELETE";
        case WndKey::KEY_RIGHT: return "KEY_RIGHT";
        case WndKey::KEY_LEFT: return "KEY_LEFT";
        case WndKey::KEY_DOWN: return "KEY_DOWN";
        case WndKey::KEY_UP: return "KEY_UP";
        case WndKey::KEY_PAGE_UP: return "KEY_PAGE_UP";
        case WndKey::KEY_PAGE_DOWN: return "KEY_PAGE_DOWN";
        case WndKey::KEY_HOME: return "KEY_HOME";
        case WndKey::KEY_END: return "KEY_END";
        case WndKey::KEY_CAPS_LOCK: return "KEY_CAPS_LOCK";
        case WndKey::KEY_SCROLL_LOCK: return "KEY_SCROLL_LOCK";
        case WndKey::KEY_NUM_LOCK: return "KEY_NUM_LOCK";
        case WndKey::KEY_PRINT_SCREEN: return "KEY_PRINT_SCREEN";
        case WndKey::KEY_PAUSE: return "KEY_PAUSE";
        case WndKey::KEY_F1: return "KEY_F1";
        case WndKey::KEY_F2: return "KEY_F2";
        case WndKey::KEY_F3: return "KEY_F3";
        case WndKey::KEY_F4: return "KEY_F4";
        case WndKey::KEY_F5: return "KEY_F5";
        case WndKey::KEY_F6: return "KEY_F6";
        case WndKey::KEY_F7: return "KEY_F7";
        case WndKey::KEY_F8: return "KEY_F8";
        case WndKey::KEY_F9: return "KEY_F9";
        case WndKey::KEY_F10: return "KEY_F10";
        case WndKey::KEY_F11: return "KEY_F11";
        case WndKey::KEY_F12: return "KEY_F12";
        case WndKey::KEY_F13: return "KEY_F13";
        case WndKey::KEY_F14: return "KEY_F14";
        case WndKey::KEY_F15: return "KEY_F15";
        case WndKey::KEY_F16: return "KEY_F16";
        case WndKey::KEY_F17: return "KEY_F17";
        case WndKey::KEY_F18: return "KEY_F18";
        case WndKey::KEY_F19: return "KEY_F19";
        case WndKey::KEY_F20: return "KEY_F20";
        case WndKey::KEY_F21: return "KEY_F21";
        case WndKey::KEY_F22: return "KEY_F22";
        case WndKey::KEY_F23: return "KEY_F23";
        case WndKey::KEY_F24: return "KEY_F24";
        case WndKey::KEY_KP_0: return "KEY_KP_0";
        case WndKey::KEY_KP_1: return "KEY_KP_1";
        case WndKey::KEY_KP_2: return "KEY_KP_2";
        case WndKey::KEY_KP_3: return "KEY_KP_3";
        case WndKey::KEY_KP_4: return "KEY_KP_4";
        case WndKey::KEY_KP_5: return "KEY_KP_5";
        case WndKey::KEY_KP_6: return "KEY_KP_6";
        case WndKey::KEY_KP_7: return "KEY_KP_7";
        case WndKey::KEY_KP_8: return "KEY_KP_8";
        case WndKey::KEY_KP_9: return "KEY_KP_9";
        case WndKey::KEY_KP_DECIMAL: return "KEY_KP_DECIMAL";
        case WndKey::KEY_KP_DIVIDE: return "KEY_KP_DIVIDE";
        case WndKey::KEY_KP_MULTIPLY: return "KEY_KP_MULTIPLY";
        case WndKey::KEY_KP_SUBTRACT: return "KEY_KP_SUBTRACT";
        case WndKey::KEY_KP_ADD: return "KEY_KP_ADD";
        case WndKey::KEY_LEFT_SHIFT: return "KEY_LEFT_SHIFT";
        case WndKey::KEY_LEFT_CONTROL: return "KEY_LEFT_CONTROL";
        case WndKey::KEY_LEFT_ALT: return "KEY_LEFT_ALT";
        case WndKey::KEY_RIGHT_SHIFT: return "KEY_RIGHT_SHIFT";
        case WndKey::KEY_RIGHT_CONTROL: return "KEY_RIGHT_CONTROL";
        case WndKey::KEY_RIGHT_ALT: return "KEY_RIGHT_ALT";
        case WndKey::KEY_MEDIA_PREV_TRACK: return "KEY_MEDIA_PREV_TRACK";
        case WndKey::KEY_MEDIA_NEXT_TRACK: return "KEY_MEDIA_NEXT_TRACK";
        case WndKey::KEY_MEDIA_PLAY_PAUSE: return "KEY_MEDIA_PLAY_PAUSE";
        default: return "UNKNOWN_KEY";
    }
}