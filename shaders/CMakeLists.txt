cmake_minimum_required (VERSION 3.8)

project (SHADERS)

set(SHADERS_PROJ_NAME ${PROJECT_NAME})
set(SHADERS_PROJ_NAME ${SHADERS_PROJ_NAME} PARENT_SCOPE)


set(SHADERS_SRC_DIR ${CMAKE_CURRENT_LIST_DIR}/source)
set(SHADERS_INCLUDE_DIR ${CMAKE_CURRENT_LIST_DIR}/include)
set(SHADERS_BIN_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)

if (NOT EXISTS ${SHADERS_BIN_DIR})
    message(STATUS "${SHADERS_PROJ_NAME}: Creating ${SHADERS_BIN_DIR}...")

    make_directory(${SHADERS_BIN_DIR})
endif()


if (${CMAKE_HOST_SYSTEM_PROCESSOR} STREQUAL "AMD64")
    set(SHADER_COMPILER $ENV{VULKAN_SDK}/Bin/glslc.exe)
else()
    set(SHADER_COMPILER $ENV{VULKAN_SDK}/Bin32/glslc.exe)
endif()

set(SHADER_COMPILER_FLAGS "-c" "-I${SHADERS_INCLUDE_DIR}")
set(SHADER_COMPILER_FLAGS ${SHADER_COMPILER_FLAGS}
    $<$<CONFIG:Debug>:-O0>
    $<$<CONFIG:Release>:-O>
)

message(STATUS "${SHADERS_PROJ_NAME}: Compiler flags: ${SHADER_COMPILER_FLAGS}")


file(GLOB_RECURSE SHADER_SRC_FILES
    ${SHADERS_SRC_DIR}/*.frag  
    ${SHADERS_SRC_DIR}/*.vert
    ${SHADERS_SRC_DIR}/*.comp
)

foreach(SHADER_SRC_FILE ${SHADER_SRC_FILES})
    get_filename_component(FILE_NAME ${SHADER_SRC_FILE} NAME)
    
    set(SHADER_SPIRV_FILE ${SHADERS_BIN_DIR}/${FILE_NAME}.spv)
    
    message(STATUS "${SHADERS_PROJ_NAME}: ${SHADER_SRC_FILE} will be compiled to ${SHADER_SPIRV_FILE}")
    
    add_custom_command(
        OUTPUT ${SHADER_SPIRV_FILE}
        COMMAND ${SHADER_COMPILER} ${SHADER_SRC_FILE} ${SHADER_COMPILER_FLAGS} -o ${SHADER_SPIRV_FILE}
        DEPENDS ${SHADER_SRC_FILE})
    list(APPEND SPIRV_BINARY_FILES ${SHADER_SPIRV_FILE})
endforeach(SHADER_SRC_FILE)

add_custom_target(${SHADERS_PROJ_NAME} DEPENDS ${SPIRV_BINARY_FILES})


# file(GLOB_RECURSE SHADER_BINARY_FILES "${CMAKE_CURRENT_SOURCE_DIR}/shaders/*.spv")